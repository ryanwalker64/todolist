(()=>{"use strict";class t{constructor(t,e,s,i){this.title=t,this.dueDate=s,this.id=Date.now().toString(),this.complete=!1}setTitle(t){this.title=t}getTitle(){return this.title}setDueDate(t){this.dueDate=t}getDueDate(){return this.dueDate}addTaskToActiveProject(){document.getElementById("activeProject").dataset.activeproject}}const e=document.getElementById("container"),s=document.getElementById("new-task"),i=document.querySelector('[name="Title"]');s.addEventListener("submit",(function(s){s.preventDefault();const n=new t(i.value),a=c.findIndex((t=>!0===t.activeProject));c[a].addTaskToProject(n),console.log(c[a]),e.innerHTML+=`\n        <li class='taskItem'>\n            <div class="checkbox-custom" data-checked="false"></div>\n            <p>${n.getTitle()}</p>\n        </li>`,i.value=""}));let c=[];const n=new class{constructor(t,e){this.title=t,this.tasks=[],this.id=Date.now().toString(),this.activeProject=!1}setTitle(t){this.title=t}getTitle(){return this.title}getTasks(){return this.tasks}addTaskToProject(t){this.tasks.push(t)}setAsActiveProject(){this.activeProject=!0;const t=document.getElementById("activeProject");t.setAttribute("data-activeProject",this.id),t.textContent=this.title}}("Unassigned Project");c.push(n),n.setAsActiveProject()})();