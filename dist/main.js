(()=>{"use strict";class t{constructor(t,e,s,i,c){this.title=t,this.dueDate=i,this.id=e||Date.now().toString(),this.complete=s||!1}setTitle(t){this.title=t}getTitle(){return this.title}getId(){return this.id}setDueDate(t){this.dueDate=t}getDueDate(){return this.dueDate}getDOMElement(){return`<li class='taskItem' tabIndex="-1" data-taskid="${this.id}">\n                    <div class="checkbox-custom" data-checked="${this.complete}" ></div>\n                    <p class="taskTitle">${this.title}</p>\n                    <div class="dueDateContainer">\n                    \n                        <p class="dueDate">${this.dueDate?this.dueDate:"No Date"}</p>\n                    </div>\n                    <p class="deleteBtn">Delete</p>\n                    \n                </li>`}showDatePicker(t){t.insertAdjacentHTML("afterbegin",'\n        <form class="dateSelection">\n             <input type="date" name="dateInput" class="dateInput" value="" autofocus>\n             <input type=submit hidden>\n             </form>'),document.querySelectorAll(".dateSelection").forEach((t=>t.addEventListener("submit",(t=>{t.preventDefault();const e=document.querySelector(".dateInput").value;console.log(e),t.target.remove()}))))}toggleComplete(){this.complete=!this.complete}}class e{constructor(t,e,s){this.title=t,this.tasks=e||[],this.id=s||Date.now().toString(),this.activeProject=!0}setTitle(t){this.title=t}getTitle(){return this.title}getTasks(){return this.tasks}deleteTask(t){const e=this.tasks.findIndex((e=>e.id===t));this.tasks.splice([e],1)}addTaskToProject(t){this.tasks.push(t),this.addTasksToDOM()}addTasksToDOM(){const t=document.getElementById("container");console.log(this.tasks);const e=this.tasks.map((t=>t.getDOMElement())).join("");t.innerHTML=e}setAsActiveProject(){this.activeProject=!0;const t=document.getElementById("activeProject");t.setAttribute("data-activeProject",this.id),t.textContent=this.title,this.addTasksToDOM()}getTaskInProject(t){const e=this.tasks.findIndex((e=>e.id===t));return this.tasks[e]}addPrototypesToTasks(){const e=this.tasks.map((e=>new t(e.title,e.id,e.complete)));this.tasks=e}}const s=document.getElementById("new-task"),i=document.querySelector('[name="Title"]'),c=document.getElementById("container"),o=new class{constructor(){this.projects=[]}findActiveProject(){const t=this.projects.findIndex((t=>!0===t.activeProject));return this.projects[t]}findProject(t){const e=this.projects.findIndex((e=>e.id===t));return this.projects[e]}addProjectToList(t){this.deactiveAllProjects(),this.projects.push(t),this.updateProjectsSidebar(),t.setAsActiveProject()}deactiveAllProjects(){this.projects.map((t=>{t.activeProject=!1}))}updateProjectsSidebar(){const t=document.querySelector(".sideBarProjectsList"),e=this.projects.map((t=>`<li class="projectTitle" data-projectId="${t.id}" data-activeproject="${t.activeProject}">${t.title}</li>`)).join("");t.innerHTML=e,this.addEventListenersToProjects()}addEventListenersToProjects(){const t=document.querySelectorAll(".projectTitle");for(let e=0;e<t.length;e++)t[e].addEventListener("click",(t=>{t.target.dataset.activeproject="true";const e=this.findProject(t.target.dataset.projectid);this.deactiveAllProjects(),e.setAsActiveProject()}))}getJSONString(){return JSON.stringify(this.projects)}setProjects(t){this.projects=t}};function n(){const t=o.getJSONString();localStorage.setItem("projects-list",t)}s.addEventListener("submit",(function(s){if(s.preventDefault(),function(){if("/"===i.value.split("")[0]){const t=i.value.slice(1),s=new e(t);return o.addProjectToList(s),s.setAsActiveProject(),i.value="",!0}}())return;const c=new t(i.value);o.findActiveProject().addTaskToProject(c),n(),i.value=""})),function(){const t=JSON.parse(localStorage.getItem("projects-list"));if(t){const s=t.map((t=>{const s=new e(t.title,t.tasks,t.id);return s.addPrototypesToTasks(),s}));o.setProjects(s),o.findActiveProject().setAsActiveProject()}else!function(){const t=new e("Inbox");o.addProjectToList(t),t.setAsActiveProject()}()}(),c.addEventListener("click",(function(t){const e=o.findActiveProject(),s=t.target,i=t.target.closest(".taskItem"),c=e.getTaskInProject(i.dataset.taskid);s.classList.contains("checkbox-custom")?function(t,e){"false"===t.dataset.checked?t.dataset.checked="true":t.dataset.checked="false",e.toggleComplete(),n()}(s,c):s.classList.contains("deleteBtn")?function(t,e){e.deleteTask(t.id),e.addTasksToDOM(),n()}(c,e):s.classList.contains("dueDate")&&c.showDatePicker(t.target.closest(".dueDateContainer"))}))})();